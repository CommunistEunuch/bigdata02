import pandas as pd

# df1 = pd.DataFrame({
#     'A':[1,2,3],
#     'B':[4,5,6],
#     'C':[7,8,9]},
#     index=[1, 2, 3]
# )
# # print(df1)
# # print()
# #------------------------------------------------------
# df2 = pd.DataFrame([
#     [1, 4, 7],
#     [2, 5, 8],
#     [3, 6, 9]
# ], columns=['A', 'B', 'C'], index=[1, 2, 3])
# print(df2)
##--------------------------------------------------------
# df3 = ((pd.melt(df2)
#        .rename(columns={'variable':'var', 'value':'val'}))
#        .query('val > 5'))
# print(df3)

#----------------------------------------------------------

df4 = pd.DataFrame({
    '날짜':['2025-09-11','2025-09-11','2025-09-12','2025-09-12'],
    '도시':['서울', '안양','서울','안양'],
    '온도':[23,22,24,26]
}, index=[1,2,3,4])
print(df4)

#------------------------------------------------------------
df5= df4.pivot(index='날짜', columns='도시', values='온도') #기준을 바꾸는 것을 pivot
print(df5)

#-----------------------------------------------------------
df6 = df4.sort_values('온도') #오름차순 asc
print(df6)

#------------------------------------------------------------
df7 = df4.sort_values('온도', ascending=False) # 내림차순 desc
print(df7)
#-----------------------------------------------------------
df8 = df4.drop(columns=['날짜', '도시']) # drop specific colums
print(df8)
#------------------------------------------------------------
#조건문
df9 = pd.DataFrame({
    'date':['2025-09-11','2025-09-11','2025-09-12','2025-09-12'],
    'city':['서울', '안양','서울','안양'],
    'temp':[23,22,24,26]
}, index=[1,2,3,4])

df10 = df9[df9.temp <= 23]
print(df10)

#-------------------------------------------------------------
#중복 값이 있는지 확인
df11 = pd.DataFrame({
    'date':['2025-09-11','2025-09-11','2025-09-12','2025-09-11'],
    'city':['서울', '안양','서울','안양'],
    'temp':[23,22,24,22]
}, index=[1,2,3,4])
df12 = df11.duplicated()
print(df12)
#--------------------------------------------------------------
#자료가 완벽하다고 생각하면 안된다. (11, 12, 13)
df13 = pd.DataFrame({
    'date':['2025-09-11','2025-09-11','2025-09-12','2025-09-13'],
    'city':['서울', '안양','서울','안양'],
    'temp':[23,22,24,25]
}, index=[1,2,3,4])

df14 = df13.pivot(index = 'date', columns = 'city', values = 'temp')
print(df14)
#---------------------------------------------------------------
df15 = df4.sample(n=2) # ramdom select n rows
print(df15)
#----------------------------------------------------------------
#n개의 기본 값은 5개이다.
df16 = df9.nsmallest(2,'temp') # colums를 기준으로 2개 제일 작은거 가지고 오기
print(df16)
df17 = df9.nlargest(2,'temp') #colums를 기준으로 2개 제일 큰거 가지고 오기
print(df17)
#-----------------------------------------------------------------
print(df4.tail(3)) #
print(df4.head(3)) #
#-----------------------------------------------------------------
#내가 보고싶은 것만 추출하여 보는 것
print(df9[['date','temp']])
print(df9) # 원본에 변화 없음
print(df9['temp']) #1개만 가지고 오기도 가능
#-----------------------------------------------------------------
# df.filter(regex='regex') # 정규표현식
# df.query() # 알죠?
#-----------------------------------------------------------------

#iloc  - index label
print(df9.iloc[1:3])

# iloc(:,[])
print(df9.iloc[:,[0,2]])
print(df9.iloc[1:3,[0,2]])
#   for, if 문 없이 원하는 값을 추출할 수 있음

#loc - label

